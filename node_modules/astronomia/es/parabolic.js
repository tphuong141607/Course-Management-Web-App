/**
 * @copyright 2013 Sonia Keys
 * @copyright 2016 commenthol
 * @license MIT
 * @module parabolic
 */

/**
 * Parabolic: Chapter 34, Parabolic Motion.
 */
import base from './base';
/**
 * Elements holds parabolic elements needed for computing true anomaly and distance.
 */

export var Elements =
/*#__PURE__*/
function () {
  /**
   * @param {Number} timeP - time of perihelion, T
   * @param {Number} pDis - perihelion distance, q
   */
  function Elements(timeP, pDis) {
    this.timeP = timeP;
    this.pDis = pDis;
  }
  /**
   * AnomalyDistance returns true anomaly and distance of a body in a parabolic orbit of the Sun.
   *
   * @param {Number} jde - Julian ephemeris day
   * @returns {Object} {ano, dist}
   *   {Number} ano - True anomaly ν in radians.
   *   {Number} dist - Distance r returned in AU.
   */


  var _proto = Elements.prototype;

  _proto.anomalyDistance = function anomalyDistance(jde) {
    var W = 3 * base.K / Math.SQRT2 * (jde - this.timeP) / this.pDis / Math.sqrt(this.pDis);
    var G = W * 0.5;
    var Y = Math.cbrt(G + Math.sqrt(G * G + 1));
    var s = Y - 1 / Y;
    var ν = 2 * Math.atan(s);
    var r = this.pDis * (1 + s * s);
    return {
      ano: ν,
      dist: r
    };
  };

  return Elements;
}();
export default {
  Elements: Elements
};