'use strict';

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var CalChinese = require('date-chinese');

var CalEvent = require('./CalEvent');

var CalDate = require('caldate');

var Chinese =
/*#__PURE__*/
function (_CalEvent) {
  _inheritsLoose(Chinese, _CalEvent);

  /**
   * @param {object} [opts]
   */
  function Chinese(opts) {
    var _this;

    opts = opts || {};
    _this = _CalEvent.call(this, opts) || this;

    switch (opts.fn) {
      case 'chinese':
        _this.cal = new CalChinese.CalendarChinese();
        break;

      case 'korean':
        _this.cal = new CalChinese.CalendarKorean();
        break;

      case 'vietnamese':
        _this.cal = new CalChinese.CalendarVietnamese();
        break;
    }

    return _this;
  }

  var _proto = Chinese.prototype;

  _proto.inYear = function inYear(year) {
    var d;
    var jde;
    var date;
    var opts = this.opts;

    if (opts.solarterm) {
      jde = this.cal.solarTerm(opts.solarterm, year);
      date = this.cal.fromJDE(jde).toGregorian();
      d = new CalDate(date).setOffset(opts.day - 1);
    } else {
      this.cal.set(opts.cycle, opts.year, opts.month, opts.leapMonth, opts.day);
      jde = this.cal.toJDE(year);
      date = this.cal.fromJDE(jde).toGregorian();
      d = new CalDate(date);
    }

    this.dates.push(d);
    return this;
  };

  return Chinese;
}(CalEvent);

module.exports = Chinese;